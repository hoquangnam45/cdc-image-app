CREATE TYPE "image_type" AS ENUM (
  'THUMBNAIL',
  'WEB_OPTIMIZED'
);

CREATE TYPE "image_status" AS ENUM (
  'UPLOADED',
  'PROCESSING',
  'COMPLETED',
  'FAILED'
);

CREATE TYPE "job_status" AS ENUM (
  'PENDING',
  'RUNNING',
  'COMPLETED',
  'FAILED'
);

CREATE TABLE "user"
(
    "id"                   UUID PRIMARY KEY,
    "username"             VARCHAR UNIQUE NOT NULL,
    "email"                VARCHAR UNIQUE,
    "phone_number"         VARCHAR UNIQUE,
    "email_confirm"        BOOL UNIQUE    NOT NULL,
    "phone_number_confirm" BOOL UNIQUE    NOT NULL,
    "password_hash"        VARCHAR        NOT NULL,
    "created_at"           TIMESTAMP      NOT NULL,
    "updated_at"           TIMESTAMP
);

CREATE TABLE "refresh_token"
(
    "id"            UUID PRIMARY KEY,
    "user_id"       UUID           NOT NULL,
    "refresh_token" VARCHAR UNIQUE NOT NULL,
    "access_token"  VARCHAR        NOT NULL,
    "ttl_sec"       INTEGER        NOT NULL,
    "created_at"    TIMESTAMP      NOT NULL,
    "expired_at"    TIMESTAMP      NOT NULL
);

CREATE TABLE "uploaded_image"
(
    "id"           UUID PRIMARY KEY,
    "width"        INTEGER      NOT NULL,
    "height"       INTEGER      NOT NULL,
    "file_size"    INTEGER      NOT NULL,
    "file_name"    VARCHAR      NOT NULL,
    "file_path"    VARCHAR      NOT NULL,
    "file_type"    VARCHAR      NOT NULL,
    "status"       IMAGE_STATUS NOT NULL,
    "created_user" UUID         NOT NULL,
    "created_at"   TIMESTAMP    NOT NULL,
    "updated_at"   TIMESTAMP,
    "deleted_at"   TIMESTAMP
);

CREATE TABLE "generated_image"
(
    "id"         UUID PRIMARY KEY,
    "image_id"   UUID       NOT NULL,
    "image_type" IMAGE_TYPE NOT NULL,
    "file_path"  VARCHAR    NOT NULL,
    "file_size"  INTEGER    NOT NULL,
    "file_type"  VARCHAR    NOT NULL,
    "width"      INTEGER    NOT NULL,
    "height"     INTEGER    NOT NULL,
    "created_at" TIMESTAMP  NOT NULL
);

CREATE TABLE "tag"
(
    "id"  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "tag" VARCHAR UNIQUE NOT NULL
);

CREATE TABLE "uploaded_image_tag"
(
    "tag_id"   INTEGER NOT NULL,
    "image_id" UUID    NOT NULL,
    PRIMARY KEY ("tag_id", "image_id")
);

CREATE TABLE "processing_job_configuration"
(
    "id"               UUID PRIMARY KEY,
    "width"            INTEGER,
    "height"           INTEGER,
    "scale"            DECIMAL,
    "keep_ratio"       BOOLEAN,
    "quality"          INTEGER,
    "description"      VARCHAR,
    "output_file_type" VARCHAR NOT NULL,
    "file_type"        VARCHAR NOT NULL
);

CREATE TABLE "processing_job"
(
    "id"         UUID PRIMARY KEY,
    "job_status" VARCHAR   NOT NULL,
    "started_at" TIMESTAMP NOT NULL,
    "ended_at"   TIMESTAMP NOT NULL,
    "expires_at" TIMESTAMP NOT NULL
);

CREATE TABLE "processing_job_item"
(
    "job_id"           UUID       NOT NULL,
    "image_id"         UUID,
    "configuration_id" UUID,
    "job_type"         IMAGE_TYPE NOT NULL,
    "width"            INTEGER,
    "height"           INTEGER,
    "file_type"        VARCHAR,
    "job_status"       VARCHAR    NOT NULL,
    "started_at"       TIMESTAMP  NOT NULL,
    "ended_at"         TIMESTAMP  NOT NULL,
    "remark"           VARCHAR,
    PRIMARY KEY ("job_id", "image_id", "configuration_id")
);

CREATE INDEX ON "uploaded_image" ("created_user");

CREATE INDEX ON "generated_image" ("image_id", "image_type");

ALTER TABLE "refresh_token"
    ADD FOREIGN KEY ("user_id") REFERENCES "user" ("id");

ALTER TABLE "uploaded_image"
    ADD FOREIGN KEY ("created_user") REFERENCES "user" ("id");

ALTER TABLE "generated_image"
    ADD FOREIGN KEY ("image_id") REFERENCES "uploaded_image" ("id");

ALTER TABLE "uploaded_image_tag"
    ADD FOREIGN KEY ("tag_id") REFERENCES "tag" ("id");

ALTER TABLE "uploaded_image_tag"
    ADD FOREIGN KEY ("image_id") REFERENCES "uploaded_image" ("id");

ALTER TABLE "processing_job_item"
    ADD FOREIGN KEY ("job_id") REFERENCES "processing_job" ("id");

ALTER TABLE "processing_job_item"
    ADD FOREIGN KEY ("image_id") REFERENCES "uploaded_image" ("id");

ALTER TABLE "processing_job_item"
    ADD FOREIGN KEY ("configuration_id") REFERENCES "processing_job_configuration" ("id");
